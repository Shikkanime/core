name: Release workflow

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      version:
        description: 'Version to release'
        required: true
      bypass_tests:
        description: 'Bypass tests failure. Default: false'
        required: false
        default: false
        type: boolean

env:
  REGISTRY_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/shikkanime-core
  V-VERSION: v${{ github.event.inputs.version }}
  VERSION: ${{ github.event.inputs.version }}

jobs:
  test:
    name: Test release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Dependencies
        uses: ./.github/actions/setup

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start valkey
        run: docker run -d --name valkey -p 6379:6379 valkey/valkey:8.1-alpine

      - name: Build and test
        run: ./gradlew clean test --info
        continue-on-error: ${{ github.event.inputs.bypass_tests }}

  docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v5

      - name: Pull latest commits
        run: git pull

      - name: Setup Dependencies
        uses: ./.github/actions/setup

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ env.V-VERSION }}
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Update build.gradle.kts
        run: |
          sed -i "s|$(grep -oP 'version = "\K[^"]*' build.gradle.kts)|${{ env.VERSION }}|g" build.gradle.kts
          sed -i 's|osdetector.classifier|"linux-aarch_64"|g' build.gradle.kts

      - name: Build
        run: gradle clean installDist

      - name: Build docker file
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache,mode=max
          push: true

  push-commit:
    name: Push version commit
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Update version in build.gradle.kts
        run: |
          #!/bin/bash
          PROJECT_VERSION=$(cat 'build.gradle.kts'  | grep -oP 'version = "\K[^\\"]*' | head -n 1)

          # Update the file
          sed -i "s|$PROJECT_VERSION|${{ env.VERSION }}|g" build.gradle.kts

          # Set up Git
          git config user.name Ziedelth
          git config user.email ${{ secrets.USER_EMAIL }}

          # Commit the changes
          git add build.gradle.kts
          git commit -m "Update version to ${{ env.VERSION }}"

      - name: Push changes
        uses: ad-m/github-push-action@v1.0.0
        with:
          github_token: ${{ secrets.USER_TOKEN }}
          branch: ${{ github.ref }}
          force: true

  push-tag:
    name: Push Git Tag
    runs-on: ubuntu-latest
    needs: [ push-commit ]

    steps:
      - uses: actions/checkout@v5

      - name: Pull latest commits
        run: git pull

      - name: Push Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{ env.V-VERSION }}
          git push origin ${{ env.V-VERSION }}