name: Release workflow

on:
  workflow_dispatch:  # Allows manual triggering

env:
  JAVA_VERSION: 21
  REGISTRY_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/shikkanime-core

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'corretto'
      - name: Build and test
        run: ./gradlew clean test --info

  upgrade-version:
    runs-on: ubuntu-latest

    outputs:
      v-version: ${{ steps.version.outputs.v-version }}

    steps:
      - uses: actions/checkout@v4

      - name: Get next version
        uses: reecetech/version-increment@2024.4.4
        id: version
        with:
          scheme: conventional_commits

  docker:
    runs-on: ubuntu-latest
    needs: [test, upgrade-version]
    strategy:
      fail-fast: false
      matrix:
        build_version: [slim, full]

    steps:
      - uses: actions/checkout@v4

      # Pull the latest commits
      - name: Pull latest commits
        run: git pull

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'corretto'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ matrix.build_version }}
            type=raw,value=${{ matrix.build_version }}-${{ needs.upgrade-version.outputs.v-version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Update version in build.gradle.kts
        run: |
          #!/bin/bash
          PROJECT_VERSION=$(cat 'build.gradle.kts'  | grep -oP 'version = "\K[^\\"]*' | head -n 1)

          # Update the file
          sed -i "s|$PROJECT_VERSION|${{ needs.upgrade-version.outputs.v-version }}|g" build.gradle.kts

      - name: Build
        run: gradle clean installDist

      - name: Build docker file
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          build-args: BUILD_VERSION=${{ matrix.build_version }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache-${{ matrix.build_version }}
          cache-to: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache-${{ matrix.build_version }},mode=max
          push: true

  push-commit:
    runs-on: ubuntu-latest
    needs: [upgrade-version, docker]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Update version in build.gradle.kts
        run: |
          #!/bin/bash
          PROJECT_VERSION=$(cat 'build.gradle.kts'  | grep -oP 'version = "\K[^\\"]*' | head -n 1)

          # Update the file
          sed -i "s|$PROJECT_VERSION|${{ needs.upgrade-version.outputs.v-version }}|g" build.gradle.kts

          # Set up Git
          git config user.name Ziedelth
          git config user.email ${{ secrets.USER_EMAIL }}

          # Commit the changes
          git add build.gradle.kts
          git commit -m "Update version to ${{ needs.upgrade-version.outputs.v-version }}"

      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.USER_TOKEN }}
          branch: ${{ github.ref }}
          force: true

  push-tag:
    runs-on: ubuntu-latest
    needs: [upgrade-version, push-commit]

    steps:
      - uses: actions/checkout@v4

      # Pull the latest commits
      - name: Pull latest commits
        run: git pull

      - name: Push Git Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{ needs.upgrade-version.outputs.v-version }}
          git push origin ${{ needs.upgrade-version.outputs.v-version }}